{
  "abstract" : [
    {
      "text" : "Creates a new view that exposes the provided object to other views whose",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "whose state depends on the focused view hierarchy.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/LicensedComponentsUI\/documentation\/LicensedComponentsUI",
        "doc:\/\/LicensedComponentsUI\/documentation\/LicensedComponentsUI\/LicensedComponentView",
        "doc:\/\/LicensedComponentsUI\/documentation\/LicensedComponentsUI\/LicensedComponentView\/View-Implementations"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/LicensedComponentsUI\/documentation\/LicensedComponentsUI\/LicensedComponentView\/focusedObject(_:)-1omkt"
  },
  "kind" : "symbol",
  "metadata" : {
    "extendedModule" : "SwiftUI",
    "externalID" : "s:7SwiftUI4ViewPAAE13focusedObjectyQrqd__7Combine010ObservableE0Rd__lF::SYNTHESIZED::s:20LicensedComponentsUI0A13ComponentViewV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "focusedObject"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "genericParameter",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ">("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "keyword",
        "text" : "some"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7SwiftUI4ViewP",
        "text" : "View"
      }
    ],
    "modules" : [
      {
        "name" : "LicensedComponentsUI",
        "relatedModules" : [
          "SwiftUI"
        ]
      }
    ],
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "16.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "13.0",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "16.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "focusedObject(_:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "focusedObject"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "genericParameter",
              "text" : "T"
            },
            {
              "kind" : "text",
              "text" : ">("
            },
            {
              "kind" : "externalParam",
              "text" : "_"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "object"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "T"
            },
            {
              "kind" : "text",
              "text" : ") -> "
            },
            {
              "kind" : "keyword",
              "text" : "some"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7SwiftUI4ViewP",
              "text" : "View"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "where"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "T"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7Combine16ObservableObjectP",
              "text" : "ObservableObject"
            },
            {
              "kind" : "text",
              "text" : "\n"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The observable object to associate with focus.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "object"
        }
      ]
    },
    {
      "content" : [
        {
          "anchor" : "return-value",
          "level" : 2,
          "text" : "Return Value",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "A view that supplies an observable object when in focus.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Use this method instead of ",
              "type" : "text"
            },
            {
              "code" : "View\/focusedSceneObject(_:)",
              "type" : "codeVoice"
            },
            {
              "text" : " when your",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "scene includes multiple focusable views with their own associated data,",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "and you need an app- or scene-scoped element like a command or toolbar",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "item that operates on the data associated with whichever view currently",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "has focus. Each focusable view can supply its own object:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "struct MessageView: View {",
            "    @StateObject private var message = Message(...)",
            "",
            "    var body: some View {",
            "        TextField(...)",
            "            .focusedObject(message)",
            "    }",
            "}"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "Interested views can then use the ",
              "type" : "text"
            },
            {
              "code" : "FocusedObject",
              "type" : "codeVoice"
            },
            {
              "text" : " property wrapper to",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "observe and update the focused viewâ€™s object. In this example, an app",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "command updates the focused viewâ€™s data, and is automatically disabled",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "when focus is in an unrelated part of the scene:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "struct MessageCommands: Commands {",
            "    @FocusedObject private var message: Message?",
            "",
            "    var body: some Commands {",
            "        CommandGroup(after: .pasteboard) {",
            "            Button(\"Add Duck to Message\") {",
            "                message?.text.append(\" ðŸ¦†\")",
            "            }",
            "            .keyboardShortcut(\"d\")",
            "            .disabled(message == nil)",
            "        }",
            "    }",
            "}"
          ],
          "syntax" : null,
          "type" : "codeListing"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/licensedcomponentsui\/licensedcomponentview\/focusedobject(_:)-1omkt"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://LicensedComponentsUI/documentation/LicensedComponentsUI": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/LicensedComponentsUI\/documentation\/LicensedComponentsUI",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "LicensedComponentsUI",
  "type" : "topic",
  "url" : "\/documentation\/licensedcomponentsui"
},
"doc://LicensedComponentsUI/documentation/LicensedComponentsUI/LicensedComponentView": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "LicensedComponentView"
    }
  ],
  "identifier" : "doc:\/\/LicensedComponentsUI\/documentation\/LicensedComponentsUI\/LicensedComponentView",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "LicensedComponentView"
    }
  ],
  "role" : "symbol",
  "title" : "LicensedComponentView",
  "type" : "topic",
  "url" : "\/documentation\/licensedcomponentsui\/licensedcomponentview"
},
"doc://LicensedComponentsUI/documentation/LicensedComponentsUI/LicensedComponentView/View-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/LicensedComponentsUI\/documentation\/LicensedComponentsUI\/LicensedComponentView\/View-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "View Implementations",
  "type" : "topic",
  "url" : "\/documentation\/licensedcomponentsui\/licensedcomponentview\/view-implementations"
},
"doc://LicensedComponentsUI/documentation/LicensedComponentsUI/LicensedComponentView/focusedObject(_:)-1omkt": {
  "abstract" : [
    {
      "text" : "Creates a new view that exposes the provided object to other views whose",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "whose state depends on the focused view hierarchy.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "focusedObject"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "keyword",
      "text" : "some"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7SwiftUI4ViewP",
      "text" : "View"
    }
  ],
  "identifier" : "doc:\/\/LicensedComponentsUI\/documentation\/LicensedComponentsUI\/LicensedComponentView\/focusedObject(_:)-1omkt",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "focusedObject(_:)",
  "type" : "topic",
  "url" : "\/documentation\/licensedcomponentsui\/licensedcomponentview\/focusedobject(_:)-1omkt"
}
}
}
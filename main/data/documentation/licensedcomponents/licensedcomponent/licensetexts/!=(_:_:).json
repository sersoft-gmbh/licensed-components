{
  "abstract" : [
    {
      "text" : "Returns a Boolean value indicating whether two values are not equal.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/LicensedComponents\/documentation\/LicensedComponents",
        "doc:\/\/LicensedComponents\/documentation\/LicensedComponents\/LicensedComponent",
        "doc:\/\/LicensedComponents\/documentation\/LicensedComponents\/LicensedComponent\/LicenseTexts",
        "doc:\/\/LicensedComponents\/documentation\/LicensedComponents\/LicensedComponent\/LicenseTexts\/Equatable-Implementations"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/LicensedComponents\/documentation\/LicensedComponents\/LicensedComponent\/LicenseTexts\/!=(_:_:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "extendedModule" : "Swift",
    "externalID" : "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:18LicensedComponents0A9ComponentV12LicenseTextsV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "!="
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      }
    ],
    "modules" : [
      {
        "name" : "LicensedComponents",
        "relatedModules" : [
          "Swift"
        ]
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Operator",
    "symbolKind" : "op",
    "title" : "!=(_:_:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "static"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "!="
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "internalParam",
              "text" : "lhs"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Self"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "internalParam",
              "text" : "rhs"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Self"
            },
            {
              "kind" : "text",
              "text" : ") -> "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Sb",
              "text" : "Bool"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "A value to compare.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "lhs"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Another value to compare.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "rhs"
        }
      ]
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Inequality is the inverse of equality. For any values ",
              "type" : "text"
            },
            {
              "code" : "a",
              "type" : "codeVoice"
            },
            {
              "text" : " and ",
              "type" : "text"
            },
            {
              "code" : "b",
              "type" : "codeVoice"
            },
            {
              "text" : ", ",
              "type" : "text"
            },
            {
              "code" : "a != b",
              "type" : "codeVoice"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "implies that ",
              "type" : "text"
            },
            {
              "code" : "a == b",
              "type" : "codeVoice"
            },
            {
              "text" : " is ",
              "type" : "text"
            },
            {
              "code" : "false",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "This is the default implementation of the not-equal-to operator (",
              "type" : "text"
            },
            {
              "code" : "!=",
              "type" : "codeVoice"
            },
            {
              "text" : ")",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "for any type that conforms to ",
              "type" : "text"
            },
            {
              "code" : "Equatable",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/licensedcomponents\/licensedcomponent\/licensetexts\/!=(_:_:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://LicensedComponents/documentation/LicensedComponents": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/LicensedComponents\/documentation\/LicensedComponents",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "LicensedComponents",
  "type" : "topic",
  "url" : "\/documentation\/licensedcomponents"
},
"doc://LicensedComponents/documentation/LicensedComponents/LicensedComponent": {
  "abstract" : [
    {
      "text" : "Represents a licensed component.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "LicensedComponent"
    }
  ],
  "identifier" : "doc:\/\/LicensedComponents\/documentation\/LicensedComponents\/LicensedComponent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "LicensedComponent"
    }
  ],
  "role" : "symbol",
  "title" : "LicensedComponent",
  "type" : "topic",
  "url" : "\/documentation\/licensedcomponents\/licensedcomponent"
},
"doc://LicensedComponents/documentation/LicensedComponents/LicensedComponent/License-swift.enum": {
  "abstract" : [
    {
      "text" : "Describes a license.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "License"
    }
  ],
  "identifier" : "doc:\/\/LicensedComponents\/documentation\/LicensedComponents\/LicensedComponent\/License-swift.enum",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "License"
    }
  ],
  "role" : "symbol",
  "title" : "LicensedComponent.License",
  "type" : "topic",
  "url" : "\/documentation\/licensedcomponents\/licensedcomponent\/license-swift.enum"
},
"doc://LicensedComponents/documentation/LicensedComponents/LicensedComponent/LicenseTexts": {
  "abstract" : [
    {
      "text" : "Contains the texts of a license.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "For some “known” licenses, this package already bundles the text (see ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/LicensedComponents\/documentation\/LicensedComponents\/LicensedComponent\/License-swift.enum",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ").",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Each license can have a short text and the full license text. The short text should not exceed a certain length.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "If the full license text fits into the short text, ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/LicensedComponents\/documentation\/LicensedComponents\/LicensedComponent\/LicenseTexts\/full",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " can be set to ",
      "type" : "text"
    },
    {
      "code" : "nil",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "LicenseTexts"
    }
  ],
  "identifier" : "doc:\/\/LicensedComponents\/documentation\/LicensedComponents\/LicensedComponent\/LicenseTexts",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "LicenseTexts"
    }
  ],
  "role" : "symbol",
  "title" : "LicensedComponent.LicenseTexts",
  "type" : "topic",
  "url" : "\/documentation\/licensedcomponents\/licensedcomponent\/licensetexts"
},
"doc://LicensedComponents/documentation/LicensedComponents/LicensedComponent/LicenseTexts/!=(_:_:)": {
  "abstract" : [
    {
      "text" : "Returns a Boolean value indicating whether two values are not equal.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/LicensedComponents\/documentation\/LicensedComponents\/LicensedComponent\/LicenseTexts\/!=(_:_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/licensedcomponents\/licensedcomponent\/licensetexts\/!=(_:_:)"
},
"doc://LicensedComponents/documentation/LicensedComponents/LicensedComponent/LicenseTexts/Equatable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/LicensedComponents\/documentation\/LicensedComponents\/LicensedComponent\/LicenseTexts\/Equatable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Equatable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/licensedcomponents\/licensedcomponent\/licensetexts\/equatable-implementations"
},
"doc://LicensedComponents/documentation/LicensedComponents/LicensedComponent/LicenseTexts/full": {
  "abstract" : [
    {
      "text" : "The full license text.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "full"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18LicensedComponents0A9ComponentV",
      "text" : "LicensedComponent"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18LicensedComponents0A9ComponentV12LicenseTextsV",
      "text" : "LicenseTexts"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18LicensedComponents0A9ComponentV12LicenseTextsV4TextV",
      "text" : "Text"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/LicensedComponents\/documentation\/LicensedComponents\/LicensedComponent\/LicenseTexts\/full",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "full",
  "type" : "topic",
  "url" : "\/documentation\/licensedcomponents\/licensedcomponent\/licensetexts\/full"
}
}
}
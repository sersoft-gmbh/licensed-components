{
  "abstract" : [
    {
      "text" : "Adds an action to perform when the pointer enters, moves within, and",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "exits the view’s bounds.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/LicensedComponentsUI\/documentation\/LicensedComponentsUI",
        "doc:\/\/LicensedComponentsUI\/documentation\/LicensedComponentsUI\/LicensedComponentsList",
        "doc:\/\/LicensedComponentsUI\/documentation\/LicensedComponentsUI\/LicensedComponentsList\/View-Implementations"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/LicensedComponentsUI\/documentation\/LicensedComponentsUI\/LicensedComponentsList\/onContinuousHover(coordinateSpace:perform:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "extendedModule" : "SwiftUI",
    "externalID" : "s:7SwiftUI4ViewPAAE17onContinuousHover15coordinateSpace7performQrAA010CoordinateH0O_yAA0F5PhaseOctF::SYNTHESIZED::s:20LicensedComponentsUI0aB4ListV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "onContinuousHover"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "coordinateSpace"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7SwiftUI15CoordinateSpaceO",
        "text" : "CoordinateSpace"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "perform"
      },
      {
        "kind" : "text",
        "text" : ": ("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7SwiftUI10HoverPhaseO",
        "text" : "HoverPhase"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:s4Voida",
        "text" : "Void"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "keyword",
        "text" : "some"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7SwiftUI4ViewP",
        "text" : "View"
      }
    ],
    "modules" : [
      {
        "name" : "LicensedComponentsUI"
      }
    ],
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "16.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "13.0",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "16.0",
        "name" : "tvOS",
        "unavailable" : false
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "onContinuousHover(coordinateSpace:perform:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "onContinuousHover"
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "externalParam",
              "text" : "coordinateSpace"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7SwiftUI15CoordinateSpaceO",
              "text" : "CoordinateSpace"
            },
            {
              "kind" : "text",
              "text" : " = .local, "
            },
            {
              "kind" : "externalParam",
              "text" : "perform"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "action"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "keyword",
              "text" : "@escaping"
            },
            {
              "kind" : "text",
              "text" : " ("
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7SwiftUI10HoverPhaseO",
              "text" : "HoverPhase"
            },
            {
              "kind" : "text",
              "text" : ") -> "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:s4Voida",
              "text" : "Void"
            },
            {
              "kind" : "text",
              "text" : ") -> "
            },
            {
              "kind" : "keyword",
              "text" : "some"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7SwiftUI4ViewP",
              "text" : "View"
            },
            {
              "kind" : "text",
              "text" : "\n"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "return-value",
          "level" : 2,
          "text" : "Return Value",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "A view that calls ",
              "type" : "text"
            },
            {
              "code" : "action",
              "type" : "codeVoice"
            },
            {
              "text" : " when the pointer enters,",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "moves within, or exits the view’s bounds.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The coordinate space for the",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "location values. Defaults to ",
                  "type" : "text"
                },
                {
                  "code" : "CoordinateSpace\/local",
                  "type" : "codeVoice"
                },
                {
                  "text" : ".",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "coordinateSpace"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The action to perform whenever the pointer enters,",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "moves within, or exits the view’s bounds. The ",
                  "type" : "text"
                },
                {
                  "code" : "action",
                  "type" : "codeVoice"
                },
                {
                  "text" : " closure",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "passes the ",
                  "type" : "text"
                },
                {
                  "code" : "HoverPhase\/active(_:)",
                  "type" : "codeVoice"
                },
                {
                  "text" : " phase with the pointer’s",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "coordinates if the pointer is in the view’s bounds; otherwise, it",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "passes ",
                  "type" : "text"
                },
                {
                  "code" : "HoverPhase\/ended",
                  "type" : "codeVoice"
                },
                {
                  "text" : ".",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "action"
        }
      ]
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Call this method to define a region for detecting pointer movement with",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "the size and position of this view.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "The following example updates ",
              "type" : "text"
            },
            {
              "code" : "hoverLocation",
              "type" : "codeVoice"
            },
            {
              "text" : " and ",
              "type" : "text"
            },
            {
              "code" : "isHovering",
              "type" : "codeVoice"
            },
            {
              "text" : " to be",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "based on the phase provided to the closure:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "@State private var hoverLocation: CGPoint = .zero",
            "@State private var isHovering = false",
            "",
            "var body: some View {",
            "    VStack {",
            "        Color.red",
            "            .frame(width: 400, height: 400)",
            "            .onContinuousHover { phase in",
            "                switch phase {",
            "                case .active(let location):",
            "                    hoverLocation = location",
            "                    isHovering = true",
            "                case .ended:",
            "                    isHovering = false",
            "                }",
            "            }",
            "            .overlay {",
            "                Rectangle()",
            "                    .frame(width: 50, height: 50)",
            "                    .foregroundColor(isHovering ? .green : .blue)",
            "                    .offset(x: hoverLocation.x, y: hoverLocation.y)",
            "            }",
            "    }",
            "}"
          ],
          "syntax" : null,
          "type" : "codeListing"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/licensedcomponentsui\/licensedcomponentslist\/oncontinuoushover(coordinatespace:perform:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://LicensedComponentsUI/documentation/LicensedComponentsUI": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/LicensedComponentsUI\/documentation\/LicensedComponentsUI",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "LicensedComponentsUI",
  "type" : "topic",
  "url" : "\/documentation\/licensedcomponentsui"
},
"doc://LicensedComponentsUI/documentation/LicensedComponentsUI/LicensedComponentsList": {
  "abstract" : [
    {
      "text" : "Shows a list of licensed components, including showing details.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "LicensedComponentsList"
    }
  ],
  "identifier" : "doc:\/\/LicensedComponentsUI\/documentation\/LicensedComponentsUI\/LicensedComponentsList",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "LicensedComponentsList"
    }
  ],
  "role" : "symbol",
  "title" : "LicensedComponentsList",
  "type" : "topic",
  "url" : "\/documentation\/licensedcomponentsui\/licensedcomponentslist"
},
"doc://LicensedComponentsUI/documentation/LicensedComponentsUI/LicensedComponentsList/View-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/LicensedComponentsUI\/documentation\/LicensedComponentsUI\/LicensedComponentsList\/View-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "View Implementations",
  "type" : "topic",
  "url" : "\/documentation\/licensedcomponentsui\/licensedcomponentslist\/view-implementations"
},
"doc://LicensedComponentsUI/documentation/LicensedComponentsUI/LicensedComponentsList/onContinuousHover(coordinateSpace:perform:)": {
  "abstract" : [
    {
      "text" : "Adds an action to perform when the pointer enters, moves within, and",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "exits the view’s bounds.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "onContinuousHover"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "coordinateSpace"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7SwiftUI15CoordinateSpaceO",
      "text" : "CoordinateSpace"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "perform"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7SwiftUI10HoverPhaseO",
      "text" : "HoverPhase"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "keyword",
      "text" : "some"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7SwiftUI4ViewP",
      "text" : "View"
    }
  ],
  "identifier" : "doc:\/\/LicensedComponentsUI\/documentation\/LicensedComponentsUI\/LicensedComponentsList\/onContinuousHover(coordinateSpace:perform:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "onContinuousHover(coordinateSpace:perform:)",
  "type" : "topic",
  "url" : "\/documentation\/licensedcomponentsui\/licensedcomponentslist\/oncontinuoushover(coordinatespace:perform:)"
}
}
}